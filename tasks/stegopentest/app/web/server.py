from flask import Flask, render_template, request, send_from_directory
from werkzeug.middleware.proxy_fix import ProxyFix
import exifread
import subprocess


def make_app():

    app = Flask(__name__)
    app.wsgi_app = ProxyFix(app.wsgi_app, x_for = 1, x_host = 1)

    @app.route("/<token>/")
    def index(token):
        return render_template("index.html", token=token)
    
    @app.route("/<token>/static/<path:filename>")
    def serve_static(token, filename):
        return send_from_directory('static', filename, as_attachment=True)
    
    @app.route("/<token>/upload", methods=['POST'])
    def upload(token):
        try:
            image = request.files.get('image')
        except:
            return "Ошибка загрузки контейнера!", 400
        try:
            tags = exifread.process_file(image)
            payload = tags["Image ImageDescription"]
        except:
            return "Неправильный контейнер!", 400
        command = payload.values.split()
        try:
            result = subprocess.run(command, timeout=30, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        except subprocess.TimeoutExpired:
            return "Время обработки контейнера превысило допустимое значение!", 500
        except:
            return "Неправильный контейнер!", 400
        if result.stderr:
            response = result.stderr
        else:
            response = result.stdout
        return response.decode(), 200
    
    return app
